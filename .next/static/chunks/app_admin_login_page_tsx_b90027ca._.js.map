{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/admin/login/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';\nimport { app } from '../../firebase/client'; // Make sure you have this export in your firebase client setup\n\nexport default function LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n    const router = useRouter();\n    const auth = getAuth(app);\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        setMessage('');\n        try {\n            await signInWithEmailAndPassword(auth, email, password);\n            router.push('/admin/requests'); // Redirect to a protected admin page on successful login\n        } catch (error: any) { // Explicitly type error\n            setError(error.message);\n        }\n    };\n\n    const handlePasswordReset = async () => {\n        if (!email) {\n            setError('Please enter your email address to reset your password.');\n            return;\n        }\n        setError('');\n        setMessage('');\n        try {\n            await sendPasswordResetEmail(auth, email);\n            setMessage('Password reset email sent. Please check your inbox.');\n        } catch (error: any) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n            <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-lg\">\n                <h2 className=\"text-2xl font-bold text-center text-gray-800\">Admin Login</h2>\n                <form onSubmit={handleLogin} className=\"space-y-6\">\n                    <div>\n                        <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\n                        <input\n                            id=\"email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                            className=\"w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</label>\n                        <input\n                            id=\"password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                            className=\"w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                    </div>\n                    {error && <p className=\"text-sm text-red-600\">{error}</p>}\n                    {message && <p className=\"text-sm text-green-600\">{message}</p>}\n                    <div>\n                        <button\n                            type=\"submit\"\n                            className=\"w-full px-4 py-2 font-bold text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                        >\n                            Login\n                        </button>\n                    </div>\n                </form>\n                <div className=\"text-center\">\n                    <button\n                        onClick={handlePasswordReset}\n                        className=\"text-sm font-medium text-blue-600 hover:underline\"\n                    >\n                        Forgot Password?\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;AACA,0NAA6C,+DAA+D;;;AAJ5G;;;;;AAMe,SAAS;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,OAAO,IAAA,wKAAO,EAAC,mIAAG;IAExB,MAAM,cAAc,OAAO;QACvB,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QACX,IAAI;YACA,MAAM,IAAA,2LAA0B,EAAC,MAAM,OAAO;YAC9C,OAAO,IAAI,CAAC,oBAAoB,yDAAyD;QAC7F,EAAE,OAAO,OAAY;YACjB,SAAS,MAAM,OAAO;QAC1B;IACJ;IAEA,MAAM,sBAAsB;QACxB,IAAI,CAAC,OAAO;YACR,SAAS;YACT;QACJ;QACA,SAAS;QACT,WAAW;QACX,IAAI;YACA,MAAM,IAAA,uLAAsB,EAAC,MAAM;YACnC,WAAW;QACf,EAAE,OAAO,OAAY;YACjB,SAAS,MAAM,OAAO;QAC1B;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;8BAA+C;;;;;;8BAC7D,6LAAC;oBAAK,UAAU;oBAAa,WAAU;;sCACnC,6LAAC;;8CACG,6LAAC;oCAAM,SAAQ;oCAAQ,WAAU;8CAAoC;;;;;;8CACrE,6LAAC;oCACG,IAAG;oCACH,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,QAAQ;oCACR,WAAU;;;;;;;;;;;;sCAGlB,6LAAC;;8CACG,6LAAC;oCAAM,SAAQ;oCAAW,WAAU;8CAAoC;;;;;;8CACxE,6LAAC;oCACG,IAAG;oCACH,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;oCACR,WAAU;;;;;;;;;;;;wBAGjB,uBAAS,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;wBAC9C,yBAAW,6LAAC;4BAAE,WAAU;sCAA0B;;;;;;sCACnD,6LAAC;sCACG,cAAA,6LAAC;gCACG,MAAK;gCACL,WAAU;0CACb;;;;;;;;;;;;;;;;;8BAKT,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;;;;;AAOrB;GApFwB;;QAKL,kJAAS;;;KALJ","debugId":null}}]
}
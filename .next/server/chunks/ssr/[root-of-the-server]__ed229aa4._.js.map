{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/firebase/server.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\n\nif (!admin.apps.length) {\n  admin.initializeApp();\n}\n\nexport const firestore = admin.firestore();\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,CAAC,mIAAU,CAAC,MAAM,EAAE;IACtB,4IAAmB;AACrB;AAEO,MAAM,YAAY,wIAAe","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/actions.ts"],"sourcesContent":["'use server'\n\nimport { firestore } from './firebase/server';\n\nexport async function saveServiceRequest(prevState: any, formData: FormData) {\n  const serviceRequest = {\n    name: formData.get('name') as string,\n    email: formData.get('email') as string,\n    phone: formData.get('phone') as string,\n    date: formData.get('date') as string,\n    service: formData.get('service') as string,\n    status: 'Pending', // Default status\n    createdAt: new Date(),\n  };\n\n  try {\n    await firestore.collection('serviceRequests').add(serviceRequest);\n    return { message: 'Service request submitted successfully!' };\n  } catch (error) {\n    console.error('Error saving service request:', error);\n    return { message: 'An error occurred while submitting your request.' };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;AAEO,eAAe,mBAAmB,SAAc,EAAE,QAAkB;IACzE,MAAM,iBAAiB;QACrB,MAAM,SAAS,GAAG,CAAC;QACnB,OAAO,SAAS,GAAG,CAAC;QACpB,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,SAAS,SAAS,GAAG,CAAC;QACtB,QAAQ;QACR,WAAW,IAAI;IACjB;IAEA,IAAI;QACF,MAAM,sIAAS,CAAC,UAAU,CAAC,mBAAmB,GAAG,CAAC;QAClD,OAAO;YAAE,SAAS;QAA0C;IAC9D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;YAAE,SAAS;QAAmD;IACvE;AACF;;;IAlBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {saveServiceRequest as '609be40870f4f7e564cedf5339d4b4dbd6b151e24b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}
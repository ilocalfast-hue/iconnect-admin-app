{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/firebase/client.ts"],"sourcesContent":["import { initializeApp, getApps } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!getApps().length) {\n  initializeApp(firebaseConfig);\n}\n\nexport const firestore = getFirestore();\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,IAAA,2KAAO,IAAG,MAAM,EAAE;IACrB,IAAA,iLAAa,EAAC;AAChB;AAEO,MAAM,YAAY,IAAA,iLAAY","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/iconnect/app/admin/requests/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useMemo, useEffect } from \"react\"\nimport { CheckIcon, XMarkIcon, ChevronUpIcon, ChevronDownIcon, MagnifyingGlassIcon } from \"@heroicons/react/24/solid\"\nimport { firestore } from \"../../firebase/client\";\nimport { collection, onSnapshot, doc, updateDoc } from \"firebase/firestore\";\n\n// --- TYPES ---\n\ntype ServiceRequest = {\n    id: string;\n    name: string;\n    email: string;\n    phone: string;\n    date: string;\n    service: string;\n    status: 'Pending' | 'Approved' | 'Rejected';\n    createdAt: any; // Firestore timestamp\n};\n\n// --- HELPER COMPONENTS ---\n\nconst StatusBadge = ({ status }: { status: ServiceRequest['status'] }) => {\n    const styles = {\n        Pending: 'bg-yellow-100 text-yellow-800',\n        Approved: 'bg-green-100 text-green-800',\n        Rejected: 'bg-red-100 text-red-800',\n    };\n    return <span className={`px-2 py-1 rounded-full text-xs font-medium ${styles[status]}`}>{status}</span>;\n};\n\n// --- MAIN PAGE COMPONENT ---\n\nexport default function RequestsPage() {\n    const [requests, setRequests] = useState<ServiceRequest[]>([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [sortConfig, setSortConfig] = useState<{ key: keyof ServiceRequest; direction: 'asc' | 'desc' } | null>(null);\n\n    useEffect(() => {\n        const unsubscribe = onSnapshot(collection(firestore, \"serviceRequests\"), (snapshot) => {\n            const newRequests = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            } as ServiceRequest));\n            setRequests(newRequests);\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const handleStatusChange = async (id: string, newStatus: ServiceRequest['status']) => {\n        const requestRef = doc(firestore, \"serviceRequests\", id);\n        await updateDoc(requestRef, { status: newStatus });\n    };\n\n    const filteredAndSortedRequests = useMemo(() => {\n        let sortedRequests = [...requests];\n\n        if (sortConfig !== null) {\n            sortedRequests.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'asc' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'asc' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n\n        return sortedRequests.filter(request =>\n            request.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            request.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            request.service.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n    }, [requests, searchTerm, sortConfig]);\n\n    const requestSort = (key: keyof ServiceRequest) => {\n        let direction: 'asc' | 'desc' = 'asc';\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'asc') {\n            direction = 'desc';\n        }\n        setSortConfig({ key, direction });\n    };\n    \n    const requestColumns = [\n        { key: 'name', label: 'Customer Name', sortable: true },\n        { key: 'email', label: 'Email' },\n        { key: 'phone', label: 'Phone' },\n        { key: 'date', label: 'Preferred Date', sortable: true },\n        { key: 'service', label: 'Service Request' },\n        { key: 'status', label: 'Status', sortable: true },\n        { key: 'createdAt', label: 'Received', sortable: true },\n        { key: 'actions', label: 'Actions' }\n    ];\n\n    const renderCell = (request: ServiceRequest, key: string) => {\n        const cellValue = request[key as keyof ServiceRequest];\n\n        switch (key) {\n            case 'status':\n                return <StatusBadge status={cellValue as ServiceRequest['status']} />;\n            case 'createdAt':\n                return <span className=\"text-sm text-gray-600\">{new Date((cellValue as any).seconds * 1000).toLocaleString()}</span>;\n             case 'actions':\n                return (\n                    <div className=\"flex items-center space-x-2\">\n                        <button onClick={() => handleStatusChange(request.id, 'Approved')} className=\"p-2 text-green-600 hover:bg-green-100 rounded-full transition-colors\"><CheckIcon className=\"h-5 w-5\" /></button>\n                        <button onClick={() => handleStatusChange(request.id, 'Rejected')} className=\"p-2 text-red-600 hover:bg-red-100 rounded-full transition-colors\"><XMarkIcon className=\"h-5 w-5\" /></button>\n                    </div>\n                );\n            default:\n                return <span className=\"text-sm text-gray-600\">{String(cellValue)}</span>;\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-8 bg-gray-50 min-h-screen\">\n            <div className=\"flex justify-between items-center mb-8\">\n                <h1 className=\"text-3xl font-bold text-gray-800\">Service Requests</h1>\n            </div>\n\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n                <div className=\"flex items-center mb-4\">\n                    <div className=\"relative w-full max-w-md\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-400\" />\n                        </div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by name, email, or service...\"\n                            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                                {requestColumns.map((col) => (\n                                    <th \n                                        key={col.key} \n                                        scope=\"col\" \n                                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        onClick={() => col.sortable && requestSort(col.key as keyof ServiceRequest)}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            {col.label}\n                                            {col.sortable && (\n                                                <span className=\"ml-1\">\n                                                    {sortConfig?.key === col.key ? (\n                                                        sortConfig.direction === 'asc' ? <ChevronUpIcon className=\"h-4 w-4\" /> : <ChevronDownIcon className=\"h-4 w-4\" />\n                                                    ) : (\n                                                        <ChevronUpIcon className=\"h-4 w-4 text-gray-300\" />\n                                                    )}\n                                                </span>\n                                            )}\n                                        </div>\n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {filteredAndSortedRequests.map((request) => (\n                                <tr key={request.id} className=\"hover:bg-gray-50 transition-colors\">\n                                    {requestColumns.map(col => (\n                                        <td key={col.key} className=\"px-6 py-4 whitespace-nowrap\">\n                                            {renderCell(request, col.key)}\n                                        </td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}